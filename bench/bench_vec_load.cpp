
#include <benchmark/benchmark.h>
#include <immintrin.h>

#include <cstdint>
#include <memory>
#include <random>

static inline void untranspose_i(const uint32_t* __restrict a_in_p, uint32_t* __restrict a_out_p) {
  a_out_p[0] = a_in_p[0];
  a_out_p[64] = a_in_p[1];
  a_out_p[128] = a_in_p[2];
  a_out_p[192] = a_in_p[3];
  a_out_p[256] = a_in_p[4];
  a_out_p[320] = a_in_p[5];
  a_out_p[384] = a_in_p[6];
  a_out_p[448] = a_in_p[7];
  a_out_p[512] = a_in_p[8];
  a_out_p[576] = a_in_p[9];
  a_out_p[640] = a_in_p[10];
  a_out_p[704] = a_in_p[11];
  a_out_p[768] = a_in_p[12];
  a_out_p[832] = a_in_p[13];
  a_out_p[896] = a_in_p[14];
  a_out_p[960] = a_in_p[15];
  a_out_p[32] = a_in_p[16];
  a_out_p[96] = a_in_p[17];
  a_out_p[160] = a_in_p[18];
  a_out_p[224] = a_in_p[19];
  a_out_p[288] = a_in_p[20];
  a_out_p[352] = a_in_p[21];
  a_out_p[416] = a_in_p[22];
  a_out_p[480] = a_in_p[23];
  a_out_p[544] = a_in_p[24];
  a_out_p[608] = a_in_p[25];
  a_out_p[672] = a_in_p[26];
  a_out_p[736] = a_in_p[27];
  a_out_p[800] = a_in_p[28];
  a_out_p[864] = a_in_p[29];
  a_out_p[928] = a_in_p[30];
  a_out_p[992] = a_in_p[31];
  a_out_p[16] = a_in_p[32];
  a_out_p[80] = a_in_p[33];
  a_out_p[144] = a_in_p[34];
  a_out_p[208] = a_in_p[35];
  a_out_p[272] = a_in_p[36];
  a_out_p[336] = a_in_p[37];
  a_out_p[400] = a_in_p[38];
  a_out_p[464] = a_in_p[39];
  a_out_p[528] = a_in_p[40];
  a_out_p[592] = a_in_p[41];
  a_out_p[656] = a_in_p[42];
  a_out_p[720] = a_in_p[43];
  a_out_p[784] = a_in_p[44];
  a_out_p[848] = a_in_p[45];
  a_out_p[912] = a_in_p[46];
  a_out_p[976] = a_in_p[47];
  a_out_p[48] = a_in_p[48];
  a_out_p[112] = a_in_p[49];
  a_out_p[176] = a_in_p[50];
  a_out_p[240] = a_in_p[51];
  a_out_p[304] = a_in_p[52];
  a_out_p[368] = a_in_p[53];
  a_out_p[432] = a_in_p[54];
  a_out_p[496] = a_in_p[55];
  a_out_p[560] = a_in_p[56];
  a_out_p[624] = a_in_p[57];
  a_out_p[688] = a_in_p[58];
  a_out_p[752] = a_in_p[59];
  a_out_p[816] = a_in_p[60];
  a_out_p[880] = a_in_p[61];
  a_out_p[944] = a_in_p[62];
  a_out_p[1008] = a_in_p[63];
  a_out_p[8] = a_in_p[64];
  a_out_p[72] = a_in_p[65];
  a_out_p[136] = a_in_p[66];
  a_out_p[200] = a_in_p[67];
  a_out_p[264] = a_in_p[68];
  a_out_p[328] = a_in_p[69];
  a_out_p[392] = a_in_p[70];
  a_out_p[456] = a_in_p[71];
  a_out_p[520] = a_in_p[72];
  a_out_p[584] = a_in_p[73];
  a_out_p[648] = a_in_p[74];
  a_out_p[712] = a_in_p[75];
  a_out_p[776] = a_in_p[76];
  a_out_p[840] = a_in_p[77];
  a_out_p[904] = a_in_p[78];
  a_out_p[968] = a_in_p[79];
  a_out_p[40] = a_in_p[80];
  a_out_p[104] = a_in_p[81];
  a_out_p[168] = a_in_p[82];
  a_out_p[232] = a_in_p[83];
  a_out_p[296] = a_in_p[84];
  a_out_p[360] = a_in_p[85];
  a_out_p[424] = a_in_p[86];
  a_out_p[488] = a_in_p[87];
  a_out_p[552] = a_in_p[88];
  a_out_p[616] = a_in_p[89];
  a_out_p[680] = a_in_p[90];
  a_out_p[744] = a_in_p[91];
  a_out_p[808] = a_in_p[92];
  a_out_p[872] = a_in_p[93];
  a_out_p[936] = a_in_p[94];
  a_out_p[1000] = a_in_p[95];
  a_out_p[24] = a_in_p[96];
  a_out_p[88] = a_in_p[97];
  a_out_p[152] = a_in_p[98];
  a_out_p[216] = a_in_p[99];
  a_out_p[280] = a_in_p[100];
  a_out_p[344] = a_in_p[101];
  a_out_p[408] = a_in_p[102];
  a_out_p[472] = a_in_p[103];
  a_out_p[536] = a_in_p[104];
  a_out_p[600] = a_in_p[105];
  a_out_p[664] = a_in_p[106];
  a_out_p[728] = a_in_p[107];
  a_out_p[792] = a_in_p[108];
  a_out_p[856] = a_in_p[109];
  a_out_p[920] = a_in_p[110];
  a_out_p[984] = a_in_p[111];
  a_out_p[56] = a_in_p[112];
  a_out_p[120] = a_in_p[113];
  a_out_p[184] = a_in_p[114];
  a_out_p[248] = a_in_p[115];
  a_out_p[312] = a_in_p[116];
  a_out_p[376] = a_in_p[117];
  a_out_p[440] = a_in_p[118];
  a_out_p[504] = a_in_p[119];
  a_out_p[568] = a_in_p[120];
  a_out_p[632] = a_in_p[121];
  a_out_p[696] = a_in_p[122];
  a_out_p[760] = a_in_p[123];
  a_out_p[824] = a_in_p[124];
  a_out_p[888] = a_in_p[125];
  a_out_p[952] = a_in_p[126];
  a_out_p[1016] = a_in_p[127];
  a_out_p[1] = a_in_p[128];
  a_out_p[65] = a_in_p[129];
  a_out_p[129] = a_in_p[130];
  a_out_p[193] = a_in_p[131];
  a_out_p[257] = a_in_p[132];
  a_out_p[321] = a_in_p[133];
  a_out_p[385] = a_in_p[134];
  a_out_p[449] = a_in_p[135];
  a_out_p[513] = a_in_p[136];
  a_out_p[577] = a_in_p[137];
  a_out_p[641] = a_in_p[138];
  a_out_p[705] = a_in_p[139];
  a_out_p[769] = a_in_p[140];
  a_out_p[833] = a_in_p[141];
  a_out_p[897] = a_in_p[142];
  a_out_p[961] = a_in_p[143];
  a_out_p[33] = a_in_p[144];
  a_out_p[97] = a_in_p[145];
  a_out_p[161] = a_in_p[146];
  a_out_p[225] = a_in_p[147];
  a_out_p[289] = a_in_p[148];
  a_out_p[353] = a_in_p[149];
  a_out_p[417] = a_in_p[150];
  a_out_p[481] = a_in_p[151];
  a_out_p[545] = a_in_p[152];
  a_out_p[609] = a_in_p[153];
  a_out_p[673] = a_in_p[154];
  a_out_p[737] = a_in_p[155];
  a_out_p[801] = a_in_p[156];
  a_out_p[865] = a_in_p[157];
  a_out_p[929] = a_in_p[158];
  a_out_p[993] = a_in_p[159];
  a_out_p[17] = a_in_p[160];
  a_out_p[81] = a_in_p[161];
  a_out_p[145] = a_in_p[162];
  a_out_p[209] = a_in_p[163];
  a_out_p[273] = a_in_p[164];
  a_out_p[337] = a_in_p[165];
  a_out_p[401] = a_in_p[166];
  a_out_p[465] = a_in_p[167];
  a_out_p[529] = a_in_p[168];
  a_out_p[593] = a_in_p[169];
  a_out_p[657] = a_in_p[170];
  a_out_p[721] = a_in_p[171];
  a_out_p[785] = a_in_p[172];
  a_out_p[849] = a_in_p[173];
  a_out_p[913] = a_in_p[174];
  a_out_p[977] = a_in_p[175];
  a_out_p[49] = a_in_p[176];
  a_out_p[113] = a_in_p[177];
  a_out_p[177] = a_in_p[178];
  a_out_p[241] = a_in_p[179];
  a_out_p[305] = a_in_p[180];
  a_out_p[369] = a_in_p[181];
  a_out_p[433] = a_in_p[182];
  a_out_p[497] = a_in_p[183];
  a_out_p[561] = a_in_p[184];
  a_out_p[625] = a_in_p[185];
  a_out_p[689] = a_in_p[186];
  a_out_p[753] = a_in_p[187];
  a_out_p[817] = a_in_p[188];
  a_out_p[881] = a_in_p[189];
  a_out_p[945] = a_in_p[190];
  a_out_p[1009] = a_in_p[191];
  a_out_p[9] = a_in_p[192];
  a_out_p[73] = a_in_p[193];
  a_out_p[137] = a_in_p[194];
  a_out_p[201] = a_in_p[195];
  a_out_p[265] = a_in_p[196];
  a_out_p[329] = a_in_p[197];
  a_out_p[393] = a_in_p[198];
  a_out_p[457] = a_in_p[199];
  a_out_p[521] = a_in_p[200];
  a_out_p[585] = a_in_p[201];
  a_out_p[649] = a_in_p[202];
  a_out_p[713] = a_in_p[203];
  a_out_p[777] = a_in_p[204];
  a_out_p[841] = a_in_p[205];
  a_out_p[905] = a_in_p[206];
  a_out_p[969] = a_in_p[207];
  a_out_p[41] = a_in_p[208];
  a_out_p[105] = a_in_p[209];
  a_out_p[169] = a_in_p[210];
  a_out_p[233] = a_in_p[211];
  a_out_p[297] = a_in_p[212];
  a_out_p[361] = a_in_p[213];
  a_out_p[425] = a_in_p[214];
  a_out_p[489] = a_in_p[215];
  a_out_p[553] = a_in_p[216];
  a_out_p[617] = a_in_p[217];
  a_out_p[681] = a_in_p[218];
  a_out_p[745] = a_in_p[219];
  a_out_p[809] = a_in_p[220];
  a_out_p[873] = a_in_p[221];
  a_out_p[937] = a_in_p[222];
  a_out_p[1001] = a_in_p[223];
  a_out_p[25] = a_in_p[224];
  a_out_p[89] = a_in_p[225];
  a_out_p[153] = a_in_p[226];
  a_out_p[217] = a_in_p[227];
  a_out_p[281] = a_in_p[228];
  a_out_p[345] = a_in_p[229];
  a_out_p[409] = a_in_p[230];
  a_out_p[473] = a_in_p[231];
  a_out_p[537] = a_in_p[232];
  a_out_p[601] = a_in_p[233];
  a_out_p[665] = a_in_p[234];
  a_out_p[729] = a_in_p[235];
  a_out_p[793] = a_in_p[236];
  a_out_p[857] = a_in_p[237];
  a_out_p[921] = a_in_p[238];
  a_out_p[985] = a_in_p[239];
  a_out_p[57] = a_in_p[240];
  a_out_p[121] = a_in_p[241];
  a_out_p[185] = a_in_p[242];
  a_out_p[249] = a_in_p[243];
  a_out_p[313] = a_in_p[244];
  a_out_p[377] = a_in_p[245];
  a_out_p[441] = a_in_p[246];
  a_out_p[505] = a_in_p[247];
  a_out_p[569] = a_in_p[248];
  a_out_p[633] = a_in_p[249];
  a_out_p[697] = a_in_p[250];
  a_out_p[761] = a_in_p[251];
  a_out_p[825] = a_in_p[252];
  a_out_p[889] = a_in_p[253];
  a_out_p[953] = a_in_p[254];
  a_out_p[1017] = a_in_p[255];
  a_out_p[2] = a_in_p[256];
  a_out_p[66] = a_in_p[257];
  a_out_p[130] = a_in_p[258];
  a_out_p[194] = a_in_p[259];
  a_out_p[258] = a_in_p[260];
  a_out_p[322] = a_in_p[261];
  a_out_p[386] = a_in_p[262];
  a_out_p[450] = a_in_p[263];
  a_out_p[514] = a_in_p[264];
  a_out_p[578] = a_in_p[265];
  a_out_p[642] = a_in_p[266];
  a_out_p[706] = a_in_p[267];
  a_out_p[770] = a_in_p[268];
  a_out_p[834] = a_in_p[269];
  a_out_p[898] = a_in_p[270];
  a_out_p[962] = a_in_p[271];
  a_out_p[34] = a_in_p[272];
  a_out_p[98] = a_in_p[273];
  a_out_p[162] = a_in_p[274];
  a_out_p[226] = a_in_p[275];
  a_out_p[290] = a_in_p[276];
  a_out_p[354] = a_in_p[277];
  a_out_p[418] = a_in_p[278];
  a_out_p[482] = a_in_p[279];
  a_out_p[546] = a_in_p[280];
  a_out_p[610] = a_in_p[281];
  a_out_p[674] = a_in_p[282];
  a_out_p[738] = a_in_p[283];
  a_out_p[802] = a_in_p[284];
  a_out_p[866] = a_in_p[285];
  a_out_p[930] = a_in_p[286];
  a_out_p[994] = a_in_p[287];
  a_out_p[18] = a_in_p[288];
  a_out_p[82] = a_in_p[289];
  a_out_p[146] = a_in_p[290];
  a_out_p[210] = a_in_p[291];
  a_out_p[274] = a_in_p[292];
  a_out_p[338] = a_in_p[293];
  a_out_p[402] = a_in_p[294];
  a_out_p[466] = a_in_p[295];
  a_out_p[530] = a_in_p[296];
  a_out_p[594] = a_in_p[297];
  a_out_p[658] = a_in_p[298];
  a_out_p[722] = a_in_p[299];
  a_out_p[786] = a_in_p[300];
  a_out_p[850] = a_in_p[301];
  a_out_p[914] = a_in_p[302];
  a_out_p[978] = a_in_p[303];
  a_out_p[50] = a_in_p[304];
  a_out_p[114] = a_in_p[305];
  a_out_p[178] = a_in_p[306];
  a_out_p[242] = a_in_p[307];
  a_out_p[306] = a_in_p[308];
  a_out_p[370] = a_in_p[309];
  a_out_p[434] = a_in_p[310];
  a_out_p[498] = a_in_p[311];
  a_out_p[562] = a_in_p[312];
  a_out_p[626] = a_in_p[313];
  a_out_p[690] = a_in_p[314];
  a_out_p[754] = a_in_p[315];
  a_out_p[818] = a_in_p[316];
  a_out_p[882] = a_in_p[317];
  a_out_p[946] = a_in_p[318];
  a_out_p[1010] = a_in_p[319];
  a_out_p[10] = a_in_p[320];
  a_out_p[74] = a_in_p[321];
  a_out_p[138] = a_in_p[322];
  a_out_p[202] = a_in_p[323];
  a_out_p[266] = a_in_p[324];
  a_out_p[330] = a_in_p[325];
  a_out_p[394] = a_in_p[326];
  a_out_p[458] = a_in_p[327];
  a_out_p[522] = a_in_p[328];
  a_out_p[586] = a_in_p[329];
  a_out_p[650] = a_in_p[330];
  a_out_p[714] = a_in_p[331];
  a_out_p[778] = a_in_p[332];
  a_out_p[842] = a_in_p[333];
  a_out_p[906] = a_in_p[334];
  a_out_p[970] = a_in_p[335];
  a_out_p[42] = a_in_p[336];
  a_out_p[106] = a_in_p[337];
  a_out_p[170] = a_in_p[338];
  a_out_p[234] = a_in_p[339];
  a_out_p[298] = a_in_p[340];
  a_out_p[362] = a_in_p[341];
  a_out_p[426] = a_in_p[342];
  a_out_p[490] = a_in_p[343];
  a_out_p[554] = a_in_p[344];
  a_out_p[618] = a_in_p[345];
  a_out_p[682] = a_in_p[346];
  a_out_p[746] = a_in_p[347];
  a_out_p[810] = a_in_p[348];
  a_out_p[874] = a_in_p[349];
  a_out_p[938] = a_in_p[350];
  a_out_p[1002] = a_in_p[351];
  a_out_p[26] = a_in_p[352];
  a_out_p[90] = a_in_p[353];
  a_out_p[154] = a_in_p[354];
  a_out_p[218] = a_in_p[355];
  a_out_p[282] = a_in_p[356];
  a_out_p[346] = a_in_p[357];
  a_out_p[410] = a_in_p[358];
  a_out_p[474] = a_in_p[359];
  a_out_p[538] = a_in_p[360];
  a_out_p[602] = a_in_p[361];
  a_out_p[666] = a_in_p[362];
  a_out_p[730] = a_in_p[363];
  a_out_p[794] = a_in_p[364];
  a_out_p[858] = a_in_p[365];
  a_out_p[922] = a_in_p[366];
  a_out_p[986] = a_in_p[367];
  a_out_p[58] = a_in_p[368];
  a_out_p[122] = a_in_p[369];
  a_out_p[186] = a_in_p[370];
  a_out_p[250] = a_in_p[371];
  a_out_p[314] = a_in_p[372];
  a_out_p[378] = a_in_p[373];
  a_out_p[442] = a_in_p[374];
  a_out_p[506] = a_in_p[375];
  a_out_p[570] = a_in_p[376];
  a_out_p[634] = a_in_p[377];
  a_out_p[698] = a_in_p[378];
  a_out_p[762] = a_in_p[379];
  a_out_p[826] = a_in_p[380];
  a_out_p[890] = a_in_p[381];
  a_out_p[954] = a_in_p[382];
  a_out_p[1018] = a_in_p[383];
  a_out_p[3] = a_in_p[384];
  a_out_p[67] = a_in_p[385];
  a_out_p[131] = a_in_p[386];
  a_out_p[195] = a_in_p[387];
  a_out_p[259] = a_in_p[388];
  a_out_p[323] = a_in_p[389];
  a_out_p[387] = a_in_p[390];
  a_out_p[451] = a_in_p[391];
  a_out_p[515] = a_in_p[392];
  a_out_p[579] = a_in_p[393];
  a_out_p[643] = a_in_p[394];
  a_out_p[707] = a_in_p[395];
  a_out_p[771] = a_in_p[396];
  a_out_p[835] = a_in_p[397];
  a_out_p[899] = a_in_p[398];
  a_out_p[963] = a_in_p[399];
  a_out_p[35] = a_in_p[400];
  a_out_p[99] = a_in_p[401];
  a_out_p[163] = a_in_p[402];
  a_out_p[227] = a_in_p[403];
  a_out_p[291] = a_in_p[404];
  a_out_p[355] = a_in_p[405];
  a_out_p[419] = a_in_p[406];
  a_out_p[483] = a_in_p[407];
  a_out_p[547] = a_in_p[408];
  a_out_p[611] = a_in_p[409];
  a_out_p[675] = a_in_p[410];
  a_out_p[739] = a_in_p[411];
  a_out_p[803] = a_in_p[412];
  a_out_p[867] = a_in_p[413];
  a_out_p[931] = a_in_p[414];
  a_out_p[995] = a_in_p[415];
  a_out_p[19] = a_in_p[416];
  a_out_p[83] = a_in_p[417];
  a_out_p[147] = a_in_p[418];
  a_out_p[211] = a_in_p[419];
  a_out_p[275] = a_in_p[420];
  a_out_p[339] = a_in_p[421];
  a_out_p[403] = a_in_p[422];
  a_out_p[467] = a_in_p[423];
  a_out_p[531] = a_in_p[424];
  a_out_p[595] = a_in_p[425];
  a_out_p[659] = a_in_p[426];
  a_out_p[723] = a_in_p[427];
  a_out_p[787] = a_in_p[428];
  a_out_p[851] = a_in_p[429];
  a_out_p[915] = a_in_p[430];
  a_out_p[979] = a_in_p[431];
  a_out_p[51] = a_in_p[432];
  a_out_p[115] = a_in_p[433];
  a_out_p[179] = a_in_p[434];
  a_out_p[243] = a_in_p[435];
  a_out_p[307] = a_in_p[436];
  a_out_p[371] = a_in_p[437];
  a_out_p[435] = a_in_p[438];
  a_out_p[499] = a_in_p[439];
  a_out_p[563] = a_in_p[440];
  a_out_p[627] = a_in_p[441];
  a_out_p[691] = a_in_p[442];
  a_out_p[755] = a_in_p[443];
  a_out_p[819] = a_in_p[444];
  a_out_p[883] = a_in_p[445];
  a_out_p[947] = a_in_p[446];
  a_out_p[1011] = a_in_p[447];
  a_out_p[11] = a_in_p[448];
  a_out_p[75] = a_in_p[449];
  a_out_p[139] = a_in_p[450];
  a_out_p[203] = a_in_p[451];
  a_out_p[267] = a_in_p[452];
  a_out_p[331] = a_in_p[453];
  a_out_p[395] = a_in_p[454];
  a_out_p[459] = a_in_p[455];
  a_out_p[523] = a_in_p[456];
  a_out_p[587] = a_in_p[457];
  a_out_p[651] = a_in_p[458];
  a_out_p[715] = a_in_p[459];
  a_out_p[779] = a_in_p[460];
  a_out_p[843] = a_in_p[461];
  a_out_p[907] = a_in_p[462];
  a_out_p[971] = a_in_p[463];
  a_out_p[43] = a_in_p[464];
  a_out_p[107] = a_in_p[465];
  a_out_p[171] = a_in_p[466];
  a_out_p[235] = a_in_p[467];
  a_out_p[299] = a_in_p[468];
  a_out_p[363] = a_in_p[469];
  a_out_p[427] = a_in_p[470];
  a_out_p[491] = a_in_p[471];
  a_out_p[555] = a_in_p[472];
  a_out_p[619] = a_in_p[473];
  a_out_p[683] = a_in_p[474];
  a_out_p[747] = a_in_p[475];
  a_out_p[811] = a_in_p[476];
  a_out_p[875] = a_in_p[477];
  a_out_p[939] = a_in_p[478];
  a_out_p[1003] = a_in_p[479];
  a_out_p[27] = a_in_p[480];
  a_out_p[91] = a_in_p[481];
  a_out_p[155] = a_in_p[482];
  a_out_p[219] = a_in_p[483];
  a_out_p[283] = a_in_p[484];
  a_out_p[347] = a_in_p[485];
  a_out_p[411] = a_in_p[486];
  a_out_p[475] = a_in_p[487];
  a_out_p[539] = a_in_p[488];
  a_out_p[603] = a_in_p[489];
  a_out_p[667] = a_in_p[490];
  a_out_p[731] = a_in_p[491];
  a_out_p[795] = a_in_p[492];
  a_out_p[859] = a_in_p[493];
  a_out_p[923] = a_in_p[494];
  a_out_p[987] = a_in_p[495];
  a_out_p[59] = a_in_p[496];
  a_out_p[123] = a_in_p[497];
  a_out_p[187] = a_in_p[498];
  a_out_p[251] = a_in_p[499];
  a_out_p[315] = a_in_p[500];
  a_out_p[379] = a_in_p[501];
  a_out_p[443] = a_in_p[502];
  a_out_p[507] = a_in_p[503];
  a_out_p[571] = a_in_p[504];
  a_out_p[635] = a_in_p[505];
  a_out_p[699] = a_in_p[506];
  a_out_p[763] = a_in_p[507];
  a_out_p[827] = a_in_p[508];
  a_out_p[891] = a_in_p[509];
  a_out_p[955] = a_in_p[510];
  a_out_p[1019] = a_in_p[511];
  a_out_p[4] = a_in_p[512];
  a_out_p[68] = a_in_p[513];
  a_out_p[132] = a_in_p[514];
  a_out_p[196] = a_in_p[515];
  a_out_p[260] = a_in_p[516];
  a_out_p[324] = a_in_p[517];
  a_out_p[388] = a_in_p[518];
  a_out_p[452] = a_in_p[519];
  a_out_p[516] = a_in_p[520];
  a_out_p[580] = a_in_p[521];
  a_out_p[644] = a_in_p[522];
  a_out_p[708] = a_in_p[523];
  a_out_p[772] = a_in_p[524];
  a_out_p[836] = a_in_p[525];
  a_out_p[900] = a_in_p[526];
  a_out_p[964] = a_in_p[527];
  a_out_p[36] = a_in_p[528];
  a_out_p[100] = a_in_p[529];
  a_out_p[164] = a_in_p[530];
  a_out_p[228] = a_in_p[531];
  a_out_p[292] = a_in_p[532];
  a_out_p[356] = a_in_p[533];
  a_out_p[420] = a_in_p[534];
  a_out_p[484] = a_in_p[535];
  a_out_p[548] = a_in_p[536];
  a_out_p[612] = a_in_p[537];
  a_out_p[676] = a_in_p[538];
  a_out_p[740] = a_in_p[539];
  a_out_p[804] = a_in_p[540];
  a_out_p[868] = a_in_p[541];
  a_out_p[932] = a_in_p[542];
  a_out_p[996] = a_in_p[543];
  a_out_p[20] = a_in_p[544];
  a_out_p[84] = a_in_p[545];
  a_out_p[148] = a_in_p[546];
  a_out_p[212] = a_in_p[547];
  a_out_p[276] = a_in_p[548];
  a_out_p[340] = a_in_p[549];
  a_out_p[404] = a_in_p[550];
  a_out_p[468] = a_in_p[551];
  a_out_p[532] = a_in_p[552];
  a_out_p[596] = a_in_p[553];
  a_out_p[660] = a_in_p[554];
  a_out_p[724] = a_in_p[555];
  a_out_p[788] = a_in_p[556];
  a_out_p[852] = a_in_p[557];
  a_out_p[916] = a_in_p[558];
  a_out_p[980] = a_in_p[559];
  a_out_p[52] = a_in_p[560];
  a_out_p[116] = a_in_p[561];
  a_out_p[180] = a_in_p[562];
  a_out_p[244] = a_in_p[563];
  a_out_p[308] = a_in_p[564];
  a_out_p[372] = a_in_p[565];
  a_out_p[436] = a_in_p[566];
  a_out_p[500] = a_in_p[567];
  a_out_p[564] = a_in_p[568];
  a_out_p[628] = a_in_p[569];
  a_out_p[692] = a_in_p[570];
  a_out_p[756] = a_in_p[571];
  a_out_p[820] = a_in_p[572];
  a_out_p[884] = a_in_p[573];
  a_out_p[948] = a_in_p[574];
  a_out_p[1012] = a_in_p[575];
  a_out_p[12] = a_in_p[576];
  a_out_p[76] = a_in_p[577];
  a_out_p[140] = a_in_p[578];
  a_out_p[204] = a_in_p[579];
  a_out_p[268] = a_in_p[580];
  a_out_p[332] = a_in_p[581];
  a_out_p[396] = a_in_p[582];
  a_out_p[460] = a_in_p[583];
  a_out_p[524] = a_in_p[584];
  a_out_p[588] = a_in_p[585];
  a_out_p[652] = a_in_p[586];
  a_out_p[716] = a_in_p[587];
  a_out_p[780] = a_in_p[588];
  a_out_p[844] = a_in_p[589];
  a_out_p[908] = a_in_p[590];
  a_out_p[972] = a_in_p[591];
  a_out_p[44] = a_in_p[592];
  a_out_p[108] = a_in_p[593];
  a_out_p[172] = a_in_p[594];
  a_out_p[236] = a_in_p[595];
  a_out_p[300] = a_in_p[596];
  a_out_p[364] = a_in_p[597];
  a_out_p[428] = a_in_p[598];
  a_out_p[492] = a_in_p[599];
  a_out_p[556] = a_in_p[600];
  a_out_p[620] = a_in_p[601];
  a_out_p[684] = a_in_p[602];
  a_out_p[748] = a_in_p[603];
  a_out_p[812] = a_in_p[604];
  a_out_p[876] = a_in_p[605];
  a_out_p[940] = a_in_p[606];
  a_out_p[1004] = a_in_p[607];
  a_out_p[28] = a_in_p[608];
  a_out_p[92] = a_in_p[609];
  a_out_p[156] = a_in_p[610];
  a_out_p[220] = a_in_p[611];
  a_out_p[284] = a_in_p[612];
  a_out_p[348] = a_in_p[613];
  a_out_p[412] = a_in_p[614];
  a_out_p[476] = a_in_p[615];
  a_out_p[540] = a_in_p[616];
  a_out_p[604] = a_in_p[617];
  a_out_p[668] = a_in_p[618];
  a_out_p[732] = a_in_p[619];
  a_out_p[796] = a_in_p[620];
  a_out_p[860] = a_in_p[621];
  a_out_p[924] = a_in_p[622];
  a_out_p[988] = a_in_p[623];
  a_out_p[60] = a_in_p[624];
  a_out_p[124] = a_in_p[625];
  a_out_p[188] = a_in_p[626];
  a_out_p[252] = a_in_p[627];
  a_out_p[316] = a_in_p[628];
  a_out_p[380] = a_in_p[629];
  a_out_p[444] = a_in_p[630];
  a_out_p[508] = a_in_p[631];
  a_out_p[572] = a_in_p[632];
  a_out_p[636] = a_in_p[633];
  a_out_p[700] = a_in_p[634];
  a_out_p[764] = a_in_p[635];
  a_out_p[828] = a_in_p[636];
  a_out_p[892] = a_in_p[637];
  a_out_p[956] = a_in_p[638];
  a_out_p[1020] = a_in_p[639];
  a_out_p[5] = a_in_p[640];
  a_out_p[69] = a_in_p[641];
  a_out_p[133] = a_in_p[642];
  a_out_p[197] = a_in_p[643];
  a_out_p[261] = a_in_p[644];
  a_out_p[325] = a_in_p[645];
  a_out_p[389] = a_in_p[646];
  a_out_p[453] = a_in_p[647];
  a_out_p[517] = a_in_p[648];
  a_out_p[581] = a_in_p[649];
  a_out_p[645] = a_in_p[650];
  a_out_p[709] = a_in_p[651];
  a_out_p[773] = a_in_p[652];
  a_out_p[837] = a_in_p[653];
  a_out_p[901] = a_in_p[654];
  a_out_p[965] = a_in_p[655];
  a_out_p[37] = a_in_p[656];
  a_out_p[101] = a_in_p[657];
  a_out_p[165] = a_in_p[658];
  a_out_p[229] = a_in_p[659];
  a_out_p[293] = a_in_p[660];
  a_out_p[357] = a_in_p[661];
  a_out_p[421] = a_in_p[662];
  a_out_p[485] = a_in_p[663];
  a_out_p[549] = a_in_p[664];
  a_out_p[613] = a_in_p[665];
  a_out_p[677] = a_in_p[666];
  a_out_p[741] = a_in_p[667];
  a_out_p[805] = a_in_p[668];
  a_out_p[869] = a_in_p[669];
  a_out_p[933] = a_in_p[670];
  a_out_p[997] = a_in_p[671];
  a_out_p[21] = a_in_p[672];
  a_out_p[85] = a_in_p[673];
  a_out_p[149] = a_in_p[674];
  a_out_p[213] = a_in_p[675];
  a_out_p[277] = a_in_p[676];
  a_out_p[341] = a_in_p[677];
  a_out_p[405] = a_in_p[678];
  a_out_p[469] = a_in_p[679];
  a_out_p[533] = a_in_p[680];
  a_out_p[597] = a_in_p[681];
  a_out_p[661] = a_in_p[682];
  a_out_p[725] = a_in_p[683];
  a_out_p[789] = a_in_p[684];
  a_out_p[853] = a_in_p[685];
  a_out_p[917] = a_in_p[686];
  a_out_p[981] = a_in_p[687];
  a_out_p[53] = a_in_p[688];
  a_out_p[117] = a_in_p[689];
  a_out_p[181] = a_in_p[690];
  a_out_p[245] = a_in_p[691];
  a_out_p[309] = a_in_p[692];
  a_out_p[373] = a_in_p[693];
  a_out_p[437] = a_in_p[694];
  a_out_p[501] = a_in_p[695];
  a_out_p[565] = a_in_p[696];
  a_out_p[629] = a_in_p[697];
  a_out_p[693] = a_in_p[698];
  a_out_p[757] = a_in_p[699];
  a_out_p[821] = a_in_p[700];
  a_out_p[885] = a_in_p[701];
  a_out_p[949] = a_in_p[702];
  a_out_p[1013] = a_in_p[703];
  a_out_p[13] = a_in_p[704];
  a_out_p[77] = a_in_p[705];
  a_out_p[141] = a_in_p[706];
  a_out_p[205] = a_in_p[707];
  a_out_p[269] = a_in_p[708];
  a_out_p[333] = a_in_p[709];
  a_out_p[397] = a_in_p[710];
  a_out_p[461] = a_in_p[711];
  a_out_p[525] = a_in_p[712];
  a_out_p[589] = a_in_p[713];
  a_out_p[653] = a_in_p[714];
  a_out_p[717] = a_in_p[715];
  a_out_p[781] = a_in_p[716];
  a_out_p[845] = a_in_p[717];
  a_out_p[909] = a_in_p[718];
  a_out_p[973] = a_in_p[719];
  a_out_p[45] = a_in_p[720];
  a_out_p[109] = a_in_p[721];
  a_out_p[173] = a_in_p[722];
  a_out_p[237] = a_in_p[723];
  a_out_p[301] = a_in_p[724];
  a_out_p[365] = a_in_p[725];
  a_out_p[429] = a_in_p[726];
  a_out_p[493] = a_in_p[727];
  a_out_p[557] = a_in_p[728];
  a_out_p[621] = a_in_p[729];
  a_out_p[685] = a_in_p[730];
  a_out_p[749] = a_in_p[731];
  a_out_p[813] = a_in_p[732];
  a_out_p[877] = a_in_p[733];
  a_out_p[941] = a_in_p[734];
  a_out_p[1005] = a_in_p[735];
  a_out_p[29] = a_in_p[736];
  a_out_p[93] = a_in_p[737];
  a_out_p[157] = a_in_p[738];
  a_out_p[221] = a_in_p[739];
  a_out_p[285] = a_in_p[740];
  a_out_p[349] = a_in_p[741];
  a_out_p[413] = a_in_p[742];
  a_out_p[477] = a_in_p[743];
  a_out_p[541] = a_in_p[744];
  a_out_p[605] = a_in_p[745];
  a_out_p[669] = a_in_p[746];
  a_out_p[733] = a_in_p[747];
  a_out_p[797] = a_in_p[748];
  a_out_p[861] = a_in_p[749];
  a_out_p[925] = a_in_p[750];
  a_out_p[989] = a_in_p[751];
  a_out_p[61] = a_in_p[752];
  a_out_p[125] = a_in_p[753];
  a_out_p[189] = a_in_p[754];
  a_out_p[253] = a_in_p[755];
  a_out_p[317] = a_in_p[756];
  a_out_p[381] = a_in_p[757];
  a_out_p[445] = a_in_p[758];
  a_out_p[509] = a_in_p[759];
  a_out_p[573] = a_in_p[760];
  a_out_p[637] = a_in_p[761];
  a_out_p[701] = a_in_p[762];
  a_out_p[765] = a_in_p[763];
  a_out_p[829] = a_in_p[764];
  a_out_p[893] = a_in_p[765];
  a_out_p[957] = a_in_p[766];
  a_out_p[1021] = a_in_p[767];
  a_out_p[6] = a_in_p[768];
  a_out_p[70] = a_in_p[769];
  a_out_p[134] = a_in_p[770];
  a_out_p[198] = a_in_p[771];
  a_out_p[262] = a_in_p[772];
  a_out_p[326] = a_in_p[773];
  a_out_p[390] = a_in_p[774];
  a_out_p[454] = a_in_p[775];
  a_out_p[518] = a_in_p[776];
  a_out_p[582] = a_in_p[777];
  a_out_p[646] = a_in_p[778];
  a_out_p[710] = a_in_p[779];
  a_out_p[774] = a_in_p[780];
  a_out_p[838] = a_in_p[781];
  a_out_p[902] = a_in_p[782];
  a_out_p[966] = a_in_p[783];
  a_out_p[38] = a_in_p[784];
  a_out_p[102] = a_in_p[785];
  a_out_p[166] = a_in_p[786];
  a_out_p[230] = a_in_p[787];
  a_out_p[294] = a_in_p[788];
  a_out_p[358] = a_in_p[789];
  a_out_p[422] = a_in_p[790];
  a_out_p[486] = a_in_p[791];
  a_out_p[550] = a_in_p[792];
  a_out_p[614] = a_in_p[793];
  a_out_p[678] = a_in_p[794];
  a_out_p[742] = a_in_p[795];
  a_out_p[806] = a_in_p[796];
  a_out_p[870] = a_in_p[797];
  a_out_p[934] = a_in_p[798];
  a_out_p[998] = a_in_p[799];
  a_out_p[22] = a_in_p[800];
  a_out_p[86] = a_in_p[801];
  a_out_p[150] = a_in_p[802];
  a_out_p[214] = a_in_p[803];
  a_out_p[278] = a_in_p[804];
  a_out_p[342] = a_in_p[805];
  a_out_p[406] = a_in_p[806];
  a_out_p[470] = a_in_p[807];
  a_out_p[534] = a_in_p[808];
  a_out_p[598] = a_in_p[809];
  a_out_p[662] = a_in_p[810];
  a_out_p[726] = a_in_p[811];
  a_out_p[790] = a_in_p[812];
  a_out_p[854] = a_in_p[813];
  a_out_p[918] = a_in_p[814];
  a_out_p[982] = a_in_p[815];
  a_out_p[54] = a_in_p[816];
  a_out_p[118] = a_in_p[817];
  a_out_p[182] = a_in_p[818];
  a_out_p[246] = a_in_p[819];
  a_out_p[310] = a_in_p[820];
  a_out_p[374] = a_in_p[821];
  a_out_p[438] = a_in_p[822];
  a_out_p[502] = a_in_p[823];
  a_out_p[566] = a_in_p[824];
  a_out_p[630] = a_in_p[825];
  a_out_p[694] = a_in_p[826];
  a_out_p[758] = a_in_p[827];
  a_out_p[822] = a_in_p[828];
  a_out_p[886] = a_in_p[829];
  a_out_p[950] = a_in_p[830];
  a_out_p[1014] = a_in_p[831];
  a_out_p[14] = a_in_p[832];
  a_out_p[78] = a_in_p[833];
  a_out_p[142] = a_in_p[834];
  a_out_p[206] = a_in_p[835];
  a_out_p[270] = a_in_p[836];
  a_out_p[334] = a_in_p[837];
  a_out_p[398] = a_in_p[838];
  a_out_p[462] = a_in_p[839];
  a_out_p[526] = a_in_p[840];
  a_out_p[590] = a_in_p[841];
  a_out_p[654] = a_in_p[842];
  a_out_p[718] = a_in_p[843];
  a_out_p[782] = a_in_p[844];
  a_out_p[846] = a_in_p[845];
  a_out_p[910] = a_in_p[846];
  a_out_p[974] = a_in_p[847];
  a_out_p[46] = a_in_p[848];
  a_out_p[110] = a_in_p[849];
  a_out_p[174] = a_in_p[850];
  a_out_p[238] = a_in_p[851];
  a_out_p[302] = a_in_p[852];
  a_out_p[366] = a_in_p[853];
  a_out_p[430] = a_in_p[854];
  a_out_p[494] = a_in_p[855];
  a_out_p[558] = a_in_p[856];
  a_out_p[622] = a_in_p[857];
  a_out_p[686] = a_in_p[858];
  a_out_p[750] = a_in_p[859];
  a_out_p[814] = a_in_p[860];
  a_out_p[878] = a_in_p[861];
  a_out_p[942] = a_in_p[862];
  a_out_p[1006] = a_in_p[863];
  a_out_p[30] = a_in_p[864];
  a_out_p[94] = a_in_p[865];
  a_out_p[158] = a_in_p[866];
  a_out_p[222] = a_in_p[867];
  a_out_p[286] = a_in_p[868];
  a_out_p[350] = a_in_p[869];
  a_out_p[414] = a_in_p[870];
  a_out_p[478] = a_in_p[871];
  a_out_p[542] = a_in_p[872];
  a_out_p[606] = a_in_p[873];
  a_out_p[670] = a_in_p[874];
  a_out_p[734] = a_in_p[875];
  a_out_p[798] = a_in_p[876];
  a_out_p[862] = a_in_p[877];
  a_out_p[926] = a_in_p[878];
  a_out_p[990] = a_in_p[879];
  a_out_p[62] = a_in_p[880];
  a_out_p[126] = a_in_p[881];
  a_out_p[190] = a_in_p[882];
  a_out_p[254] = a_in_p[883];
  a_out_p[318] = a_in_p[884];
  a_out_p[382] = a_in_p[885];
  a_out_p[446] = a_in_p[886];
  a_out_p[510] = a_in_p[887];
  a_out_p[574] = a_in_p[888];
  a_out_p[638] = a_in_p[889];
  a_out_p[702] = a_in_p[890];
  a_out_p[766] = a_in_p[891];
  a_out_p[830] = a_in_p[892];
  a_out_p[894] = a_in_p[893];
  a_out_p[958] = a_in_p[894];
  a_out_p[1022] = a_in_p[895];
  a_out_p[7] = a_in_p[896];
  a_out_p[71] = a_in_p[897];
  a_out_p[135] = a_in_p[898];
  a_out_p[199] = a_in_p[899];
  a_out_p[263] = a_in_p[900];
  a_out_p[327] = a_in_p[901];
  a_out_p[391] = a_in_p[902];
  a_out_p[455] = a_in_p[903];
  a_out_p[519] = a_in_p[904];
  a_out_p[583] = a_in_p[905];
  a_out_p[647] = a_in_p[906];
  a_out_p[711] = a_in_p[907];
  a_out_p[775] = a_in_p[908];
  a_out_p[839] = a_in_p[909];
  a_out_p[903] = a_in_p[910];
  a_out_p[967] = a_in_p[911];
  a_out_p[39] = a_in_p[912];
  a_out_p[103] = a_in_p[913];
  a_out_p[167] = a_in_p[914];
  a_out_p[231] = a_in_p[915];
  a_out_p[295] = a_in_p[916];
  a_out_p[359] = a_in_p[917];
  a_out_p[423] = a_in_p[918];
  a_out_p[487] = a_in_p[919];
  a_out_p[551] = a_in_p[920];
  a_out_p[615] = a_in_p[921];
  a_out_p[679] = a_in_p[922];
  a_out_p[743] = a_in_p[923];
  a_out_p[807] = a_in_p[924];
  a_out_p[871] = a_in_p[925];
  a_out_p[935] = a_in_p[926];
  a_out_p[999] = a_in_p[927];
  a_out_p[23] = a_in_p[928];
  a_out_p[87] = a_in_p[929];
  a_out_p[151] = a_in_p[930];
  a_out_p[215] = a_in_p[931];
  a_out_p[279] = a_in_p[932];
  a_out_p[343] = a_in_p[933];
  a_out_p[407] = a_in_p[934];
  a_out_p[471] = a_in_p[935];
  a_out_p[535] = a_in_p[936];
  a_out_p[599] = a_in_p[937];
  a_out_p[663] = a_in_p[938];
  a_out_p[727] = a_in_p[939];
  a_out_p[791] = a_in_p[940];
  a_out_p[855] = a_in_p[941];
  a_out_p[919] = a_in_p[942];
  a_out_p[983] = a_in_p[943];
  a_out_p[55] = a_in_p[944];
  a_out_p[119] = a_in_p[945];
  a_out_p[183] = a_in_p[946];
  a_out_p[247] = a_in_p[947];
  a_out_p[311] = a_in_p[948];
  a_out_p[375] = a_in_p[949];
  a_out_p[439] = a_in_p[950];
  a_out_p[503] = a_in_p[951];
  a_out_p[567] = a_in_p[952];
  a_out_p[631] = a_in_p[953];
  a_out_p[695] = a_in_p[954];
  a_out_p[759] = a_in_p[955];
  a_out_p[823] = a_in_p[956];
  a_out_p[887] = a_in_p[957];
  a_out_p[951] = a_in_p[958];
  a_out_p[1015] = a_in_p[959];
  a_out_p[15] = a_in_p[960];
  a_out_p[79] = a_in_p[961];
  a_out_p[143] = a_in_p[962];
  a_out_p[207] = a_in_p[963];
  a_out_p[271] = a_in_p[964];
  a_out_p[335] = a_in_p[965];
  a_out_p[399] = a_in_p[966];
  a_out_p[463] = a_in_p[967];
  a_out_p[527] = a_in_p[968];
  a_out_p[591] = a_in_p[969];
  a_out_p[655] = a_in_p[970];
  a_out_p[719] = a_in_p[971];
  a_out_p[783] = a_in_p[972];
  a_out_p[847] = a_in_p[973];
  a_out_p[911] = a_in_p[974];
  a_out_p[975] = a_in_p[975];
  a_out_p[47] = a_in_p[976];
  a_out_p[111] = a_in_p[977];
  a_out_p[175] = a_in_p[978];
  a_out_p[239] = a_in_p[979];
  a_out_p[303] = a_in_p[980];
  a_out_p[367] = a_in_p[981];
  a_out_p[431] = a_in_p[982];
  a_out_p[495] = a_in_p[983];
  a_out_p[559] = a_in_p[984];
  a_out_p[623] = a_in_p[985];
  a_out_p[687] = a_in_p[986];
  a_out_p[751] = a_in_p[987];
  a_out_p[815] = a_in_p[988];
  a_out_p[879] = a_in_p[989];
  a_out_p[943] = a_in_p[990];
  a_out_p[1007] = a_in_p[991];
  a_out_p[31] = a_in_p[992];
  a_out_p[95] = a_in_p[993];
  a_out_p[159] = a_in_p[994];
  a_out_p[223] = a_in_p[995];
  a_out_p[287] = a_in_p[996];
  a_out_p[351] = a_in_p[997];
  a_out_p[415] = a_in_p[998];
  a_out_p[479] = a_in_p[999];
  a_out_p[543] = a_in_p[1000];
  a_out_p[607] = a_in_p[1001];
  a_out_p[671] = a_in_p[1002];
  a_out_p[735] = a_in_p[1003];
  a_out_p[799] = a_in_p[1004];
  a_out_p[863] = a_in_p[1005];
  a_out_p[927] = a_in_p[1006];
  a_out_p[991] = a_in_p[1007];
  a_out_p[63] = a_in_p[1008];
  a_out_p[127] = a_in_p[1009];
  a_out_p[191] = a_in_p[1010];
  a_out_p[255] = a_in_p[1011];
  a_out_p[319] = a_in_p[1012];
  a_out_p[383] = a_in_p[1013];
  a_out_p[447] = a_in_p[1014];
  a_out_p[511] = a_in_p[1015];
  a_out_p[575] = a_in_p[1016];
  a_out_p[639] = a_in_p[1017];
  a_out_p[703] = a_in_p[1018];
  a_out_p[767] = a_in_p[1019];
  a_out_p[831] = a_in_p[1020];
  a_out_p[895] = a_in_p[1021];
  a_out_p[959] = a_in_p[1022];
  a_out_p[1023] = a_in_p[1023];
}

constexpr auto VEC_SIZE = 1024;

constexpr size_t TILE_START_POS[8] = {0, 16 * 4, 16 * 2, 16 * 6, 16 * 1, 16 * 5, 16 * 3, 16 * 7};
static inline void fls_transpose(const uint32_t* __restrict in, uint32_t* __restrict out) {
  // 8 values at a time.
  for (size_t i = 0; i < VEC_SIZE; i += 8) {
    auto tile_num = i % 64 / 8;
    auto start_pos_in_tile = i / 64;
    for (int j = 0; j < 8; ++j) {
      out[TILE_START_POS[tile_num] + start_pos_in_tile + j * 128] = in[i + j];
    }
  }
  // for (size_t i = 0; i < K_VECTOR_SIZE; ++i) {
  //   assert(out[i] == helper::transposed_arr_ow32[i]);
  // }
}

static inline void fls_untranspose(const uint32_t* __restrict in, uint32_t* __restrict out) {
  // 8 values at a time.
  for (size_t i = 0; i < VEC_SIZE; i += 8) {
    auto tile_num = i % 64 / 8;
    auto start_pos_in_tile = i / 64;
    for (int j = 0; j < 8; ++j) {
      out[i + j] = in[TILE_START_POS[tile_num] + start_pos_in_tile + j * 128];
    }
  }
  // for (size_t i = 0; i < K_VECTOR_SIZE; ++i) {
  //   assert(out[i] == helper::transposed_arr_ow32[i]);
  // }
}

static void BM_VecLoad(benchmark::State& state) {
  uint32_t* __restrict rle_values = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_values[i] = i;
  }
  uint32_t* __restrict rle_idxs = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_idxs[i] = i / 4;
  }
  uint32_t* __restrict output = new (std::align_val_t{64}) uint32_t[VEC_SIZE];

  for (auto _ : state) {
    for (int i = 0; i < VEC_SIZE; ++i) {
      output[i] = rle_values[rle_idxs[i]];
    }
    benchmark::DoNotOptimize(output);
    benchmark::ClobberMemory();
  }
  ::operator delete[](rle_values, std::align_val_t(64));
  ::operator delete[](rle_idxs, std::align_val_t(64));
  ::operator delete[](output, std::align_val_t(64));
}
BENCHMARK(BM_VecLoad);

static inline void UnrolledRLEDecoding16Values(uint32_t* __restrict dst_ptr, const uint32_t* __restrict rle_values,
                                               const uint32_t* __restrict rle_idxs) {
  dst_ptr[0] = rle_values[rle_idxs[0]];
  dst_ptr[1] = rle_values[rle_idxs[1]];
  dst_ptr[2] = rle_values[rle_idxs[2]];
  dst_ptr[3] = rle_values[rle_idxs[3]];
  dst_ptr[4] = rle_values[rle_idxs[4]];
  dst_ptr[5] = rle_values[rle_idxs[5]];
  dst_ptr[6] = rle_values[rle_idxs[6]];
  dst_ptr[7] = rle_values[rle_idxs[7]];
  dst_ptr[8] = rle_values[rle_idxs[8]];
  dst_ptr[9] = rle_values[rle_idxs[9]];
  dst_ptr[10] = rle_values[rle_idxs[10]];
  dst_ptr[11] = rle_values[rle_idxs[11]];
  dst_ptr[12] = rle_values[rle_idxs[12]];
  dst_ptr[13] = rle_values[rle_idxs[13]];
  dst_ptr[14] = rle_values[rle_idxs[14]];
  dst_ptr[15] = rle_values[rle_idxs[15]];
}
static inline void UnrolledRLEDecoding512Values(uint32_t* __restrict dst_ptr, const uint32_t* __restrict rle_values,
                                                const uint32_t* __restrict rle_idxs) {
  dst_ptr[0] = rle_values[rle_idxs[0]];
  dst_ptr[1] = rle_values[rle_idxs[1]];
  dst_ptr[2] = rle_values[rle_idxs[2]];
  dst_ptr[3] = rle_values[rle_idxs[3]];
  dst_ptr[4] = rle_values[rle_idxs[4]];
  dst_ptr[5] = rle_values[rle_idxs[5]];
  dst_ptr[6] = rle_values[rle_idxs[6]];
  dst_ptr[7] = rle_values[rle_idxs[7]];
  dst_ptr[8] = rle_values[rle_idxs[8]];
  dst_ptr[9] = rle_values[rle_idxs[9]];
  dst_ptr[10] = rle_values[rle_idxs[10]];
  dst_ptr[11] = rle_values[rle_idxs[11]];
  dst_ptr[12] = rle_values[rle_idxs[12]];
  dst_ptr[13] = rle_values[rle_idxs[13]];
  dst_ptr[14] = rle_values[rle_idxs[14]];
  dst_ptr[15] = rle_values[rle_idxs[15]];
  dst_ptr[16] = rle_values[rle_idxs[16]];
  dst_ptr[17] = rle_values[rle_idxs[17]];
  dst_ptr[18] = rle_values[rle_idxs[18]];
  dst_ptr[19] = rle_values[rle_idxs[19]];
  dst_ptr[20] = rle_values[rle_idxs[20]];
  dst_ptr[21] = rle_values[rle_idxs[21]];
  dst_ptr[22] = rle_values[rle_idxs[22]];
  dst_ptr[23] = rle_values[rle_idxs[23]];
  dst_ptr[24] = rle_values[rle_idxs[24]];
  dst_ptr[25] = rle_values[rle_idxs[25]];
  dst_ptr[26] = rle_values[rle_idxs[26]];
  dst_ptr[27] = rle_values[rle_idxs[27]];
  dst_ptr[28] = rle_values[rle_idxs[28]];
  dst_ptr[29] = rle_values[rle_idxs[29]];
  dst_ptr[30] = rle_values[rle_idxs[30]];
  dst_ptr[31] = rle_values[rle_idxs[31]];
  dst_ptr[32] = rle_values[rle_idxs[32]];
  dst_ptr[33] = rle_values[rle_idxs[33]];
  dst_ptr[34] = rle_values[rle_idxs[34]];
  dst_ptr[35] = rle_values[rle_idxs[35]];
  dst_ptr[36] = rle_values[rle_idxs[36]];
  dst_ptr[37] = rle_values[rle_idxs[37]];
  dst_ptr[38] = rle_values[rle_idxs[38]];
  dst_ptr[39] = rle_values[rle_idxs[39]];
  dst_ptr[40] = rle_values[rle_idxs[40]];
  dst_ptr[41] = rle_values[rle_idxs[41]];
  dst_ptr[42] = rle_values[rle_idxs[42]];
  dst_ptr[43] = rle_values[rle_idxs[43]];
  dst_ptr[44] = rle_values[rle_idxs[44]];
  dst_ptr[45] = rle_values[rle_idxs[45]];
  dst_ptr[46] = rle_values[rle_idxs[46]];
  dst_ptr[47] = rle_values[rle_idxs[47]];
  dst_ptr[48] = rle_values[rle_idxs[48]];
  dst_ptr[49] = rle_values[rle_idxs[49]];
  dst_ptr[50] = rle_values[rle_idxs[50]];
  dst_ptr[51] = rle_values[rle_idxs[51]];
  dst_ptr[52] = rle_values[rle_idxs[52]];
  dst_ptr[53] = rle_values[rle_idxs[53]];
  dst_ptr[54] = rle_values[rle_idxs[54]];
  dst_ptr[55] = rle_values[rle_idxs[55]];
  dst_ptr[56] = rle_values[rle_idxs[56]];
  dst_ptr[57] = rle_values[rle_idxs[57]];
  dst_ptr[58] = rle_values[rle_idxs[58]];
  dst_ptr[59] = rle_values[rle_idxs[59]];
  dst_ptr[60] = rle_values[rle_idxs[60]];
  dst_ptr[61] = rle_values[rle_idxs[61]];
  dst_ptr[62] = rle_values[rle_idxs[62]];
  dst_ptr[63] = rle_values[rle_idxs[63]];
  dst_ptr[64] = rle_values[rle_idxs[64]];
  dst_ptr[65] = rle_values[rle_idxs[65]];
  dst_ptr[66] = rle_values[rle_idxs[66]];
  dst_ptr[67] = rle_values[rle_idxs[67]];
  dst_ptr[68] = rle_values[rle_idxs[68]];
  dst_ptr[69] = rle_values[rle_idxs[69]];
  dst_ptr[70] = rle_values[rle_idxs[70]];
  dst_ptr[71] = rle_values[rle_idxs[71]];
  dst_ptr[72] = rle_values[rle_idxs[72]];
  dst_ptr[73] = rle_values[rle_idxs[73]];
  dst_ptr[74] = rle_values[rle_idxs[74]];
  dst_ptr[75] = rle_values[rle_idxs[75]];
  dst_ptr[76] = rle_values[rle_idxs[76]];
  dst_ptr[77] = rle_values[rle_idxs[77]];
  dst_ptr[78] = rle_values[rle_idxs[78]];
  dst_ptr[79] = rle_values[rle_idxs[79]];
  dst_ptr[80] = rle_values[rle_idxs[80]];
  dst_ptr[81] = rle_values[rle_idxs[81]];
  dst_ptr[82] = rle_values[rle_idxs[82]];
  dst_ptr[83] = rle_values[rle_idxs[83]];
  dst_ptr[84] = rle_values[rle_idxs[84]];
  dst_ptr[85] = rle_values[rle_idxs[85]];
  dst_ptr[86] = rle_values[rle_idxs[86]];
  dst_ptr[87] = rle_values[rle_idxs[87]];
  dst_ptr[88] = rle_values[rle_idxs[88]];
  dst_ptr[89] = rle_values[rle_idxs[89]];
  dst_ptr[90] = rle_values[rle_idxs[90]];
  dst_ptr[91] = rle_values[rle_idxs[91]];
  dst_ptr[92] = rle_values[rle_idxs[92]];
  dst_ptr[93] = rle_values[rle_idxs[93]];
  dst_ptr[94] = rle_values[rle_idxs[94]];
  dst_ptr[95] = rle_values[rle_idxs[95]];
  dst_ptr[96] = rle_values[rle_idxs[96]];
  dst_ptr[97] = rle_values[rle_idxs[97]];
  dst_ptr[98] = rle_values[rle_idxs[98]];
  dst_ptr[99] = rle_values[rle_idxs[99]];
  dst_ptr[100] = rle_values[rle_idxs[100]];
  dst_ptr[101] = rle_values[rle_idxs[101]];
  dst_ptr[102] = rle_values[rle_idxs[102]];
  dst_ptr[103] = rle_values[rle_idxs[103]];
  dst_ptr[104] = rle_values[rle_idxs[104]];
  dst_ptr[105] = rle_values[rle_idxs[105]];
  dst_ptr[106] = rle_values[rle_idxs[106]];
  dst_ptr[107] = rle_values[rle_idxs[107]];
  dst_ptr[108] = rle_values[rle_idxs[108]];
  dst_ptr[109] = rle_values[rle_idxs[109]];
  dst_ptr[110] = rle_values[rle_idxs[110]];
  dst_ptr[111] = rle_values[rle_idxs[111]];
  dst_ptr[112] = rle_values[rle_idxs[112]];
  dst_ptr[113] = rle_values[rle_idxs[113]];
  dst_ptr[114] = rle_values[rle_idxs[114]];
  dst_ptr[115] = rle_values[rle_idxs[115]];
  dst_ptr[116] = rle_values[rle_idxs[116]];
  dst_ptr[117] = rle_values[rle_idxs[117]];
  dst_ptr[118] = rle_values[rle_idxs[118]];
  dst_ptr[119] = rle_values[rle_idxs[119]];
  dst_ptr[120] = rle_values[rle_idxs[120]];
  dst_ptr[121] = rle_values[rle_idxs[121]];
  dst_ptr[122] = rle_values[rle_idxs[122]];
  dst_ptr[123] = rle_values[rle_idxs[123]];
  dst_ptr[124] = rle_values[rle_idxs[124]];
  dst_ptr[125] = rle_values[rle_idxs[125]];
  dst_ptr[126] = rle_values[rle_idxs[126]];
  dst_ptr[127] = rle_values[rle_idxs[127]];
  dst_ptr[128] = rle_values[rle_idxs[128]];
  dst_ptr[129] = rle_values[rle_idxs[129]];
  dst_ptr[130] = rle_values[rle_idxs[130]];
  dst_ptr[131] = rle_values[rle_idxs[131]];
  dst_ptr[132] = rle_values[rle_idxs[132]];
  dst_ptr[133] = rle_values[rle_idxs[133]];
  dst_ptr[134] = rle_values[rle_idxs[134]];
  dst_ptr[135] = rle_values[rle_idxs[135]];
  dst_ptr[136] = rle_values[rle_idxs[136]];
  dst_ptr[137] = rle_values[rle_idxs[137]];
  dst_ptr[138] = rle_values[rle_idxs[138]];
  dst_ptr[139] = rle_values[rle_idxs[139]];
  dst_ptr[140] = rle_values[rle_idxs[140]];
  dst_ptr[141] = rle_values[rle_idxs[141]];
  dst_ptr[142] = rle_values[rle_idxs[142]];
  dst_ptr[143] = rle_values[rle_idxs[143]];
  dst_ptr[144] = rle_values[rle_idxs[144]];
  dst_ptr[145] = rle_values[rle_idxs[145]];
  dst_ptr[146] = rle_values[rle_idxs[146]];
  dst_ptr[147] = rle_values[rle_idxs[147]];
  dst_ptr[148] = rle_values[rle_idxs[148]];
  dst_ptr[149] = rle_values[rle_idxs[149]];
  dst_ptr[150] = rle_values[rle_idxs[150]];
  dst_ptr[151] = rle_values[rle_idxs[151]];
  dst_ptr[152] = rle_values[rle_idxs[152]];
  dst_ptr[153] = rle_values[rle_idxs[153]];
  dst_ptr[154] = rle_values[rle_idxs[154]];
  dst_ptr[155] = rle_values[rle_idxs[155]];
  dst_ptr[156] = rle_values[rle_idxs[156]];
  dst_ptr[157] = rle_values[rle_idxs[157]];
  dst_ptr[158] = rle_values[rle_idxs[158]];
  dst_ptr[159] = rle_values[rle_idxs[159]];
  dst_ptr[160] = rle_values[rle_idxs[160]];
  dst_ptr[161] = rle_values[rle_idxs[161]];
  dst_ptr[162] = rle_values[rle_idxs[162]];
  dst_ptr[163] = rle_values[rle_idxs[163]];
  dst_ptr[164] = rle_values[rle_idxs[164]];
  dst_ptr[165] = rle_values[rle_idxs[165]];
  dst_ptr[166] = rle_values[rle_idxs[166]];
  dst_ptr[167] = rle_values[rle_idxs[167]];
  dst_ptr[168] = rle_values[rle_idxs[168]];
  dst_ptr[169] = rle_values[rle_idxs[169]];
  dst_ptr[170] = rle_values[rle_idxs[170]];
  dst_ptr[171] = rle_values[rle_idxs[171]];
  dst_ptr[172] = rle_values[rle_idxs[172]];
  dst_ptr[173] = rle_values[rle_idxs[173]];
  dst_ptr[174] = rle_values[rle_idxs[174]];
  dst_ptr[175] = rle_values[rle_idxs[175]];
  dst_ptr[176] = rle_values[rle_idxs[176]];
  dst_ptr[177] = rle_values[rle_idxs[177]];
  dst_ptr[178] = rle_values[rle_idxs[178]];
  dst_ptr[179] = rle_values[rle_idxs[179]];
  dst_ptr[180] = rle_values[rle_idxs[180]];
  dst_ptr[181] = rle_values[rle_idxs[181]];
  dst_ptr[182] = rle_values[rle_idxs[182]];
  dst_ptr[183] = rle_values[rle_idxs[183]];
  dst_ptr[184] = rle_values[rle_idxs[184]];
  dst_ptr[185] = rle_values[rle_idxs[185]];
  dst_ptr[186] = rle_values[rle_idxs[186]];
  dst_ptr[187] = rle_values[rle_idxs[187]];
  dst_ptr[188] = rle_values[rle_idxs[188]];
  dst_ptr[189] = rle_values[rle_idxs[189]];
  dst_ptr[190] = rle_values[rle_idxs[190]];
  dst_ptr[191] = rle_values[rle_idxs[191]];
  dst_ptr[192] = rle_values[rle_idxs[192]];
  dst_ptr[193] = rle_values[rle_idxs[193]];
  dst_ptr[194] = rle_values[rle_idxs[194]];
  dst_ptr[195] = rle_values[rle_idxs[195]];
  dst_ptr[196] = rle_values[rle_idxs[196]];
  dst_ptr[197] = rle_values[rle_idxs[197]];
  dst_ptr[198] = rle_values[rle_idxs[198]];
  dst_ptr[199] = rle_values[rle_idxs[199]];
  dst_ptr[200] = rle_values[rle_idxs[200]];
  dst_ptr[201] = rle_values[rle_idxs[201]];
  dst_ptr[202] = rle_values[rle_idxs[202]];
  dst_ptr[203] = rle_values[rle_idxs[203]];
  dst_ptr[204] = rle_values[rle_idxs[204]];
  dst_ptr[205] = rle_values[rle_idxs[205]];
  dst_ptr[206] = rle_values[rle_idxs[206]];
  dst_ptr[207] = rle_values[rle_idxs[207]];
  dst_ptr[208] = rle_values[rle_idxs[208]];
  dst_ptr[209] = rle_values[rle_idxs[209]];
  dst_ptr[210] = rle_values[rle_idxs[210]];
  dst_ptr[211] = rle_values[rle_idxs[211]];
  dst_ptr[212] = rle_values[rle_idxs[212]];
  dst_ptr[213] = rle_values[rle_idxs[213]];
  dst_ptr[214] = rle_values[rle_idxs[214]];
  dst_ptr[215] = rle_values[rle_idxs[215]];
  dst_ptr[216] = rle_values[rle_idxs[216]];
  dst_ptr[217] = rle_values[rle_idxs[217]];
  dst_ptr[218] = rle_values[rle_idxs[218]];
  dst_ptr[219] = rle_values[rle_idxs[219]];
  dst_ptr[220] = rle_values[rle_idxs[220]];
  dst_ptr[221] = rle_values[rle_idxs[221]];
  dst_ptr[222] = rle_values[rle_idxs[222]];
  dst_ptr[223] = rle_values[rle_idxs[223]];
  dst_ptr[224] = rle_values[rle_idxs[224]];
  dst_ptr[225] = rle_values[rle_idxs[225]];
  dst_ptr[226] = rle_values[rle_idxs[226]];
  dst_ptr[227] = rle_values[rle_idxs[227]];
  dst_ptr[228] = rle_values[rle_idxs[228]];
  dst_ptr[229] = rle_values[rle_idxs[229]];
  dst_ptr[230] = rle_values[rle_idxs[230]];
  dst_ptr[231] = rle_values[rle_idxs[231]];
  dst_ptr[232] = rle_values[rle_idxs[232]];
  dst_ptr[233] = rle_values[rle_idxs[233]];
  dst_ptr[234] = rle_values[rle_idxs[234]];
  dst_ptr[235] = rle_values[rle_idxs[235]];
  dst_ptr[236] = rle_values[rle_idxs[236]];
  dst_ptr[237] = rle_values[rle_idxs[237]];
  dst_ptr[238] = rle_values[rle_idxs[238]];
  dst_ptr[239] = rle_values[rle_idxs[239]];
  dst_ptr[240] = rle_values[rle_idxs[240]];
  dst_ptr[241] = rle_values[rle_idxs[241]];
  dst_ptr[242] = rle_values[rle_idxs[242]];
  dst_ptr[243] = rle_values[rle_idxs[243]];
  dst_ptr[244] = rle_values[rle_idxs[244]];
  dst_ptr[245] = rle_values[rle_idxs[245]];
  dst_ptr[246] = rle_values[rle_idxs[246]];
  dst_ptr[247] = rle_values[rle_idxs[247]];
  dst_ptr[248] = rle_values[rle_idxs[248]];
  dst_ptr[249] = rle_values[rle_idxs[249]];
  dst_ptr[250] = rle_values[rle_idxs[250]];
  dst_ptr[251] = rle_values[rle_idxs[251]];
  dst_ptr[252] = rle_values[rle_idxs[252]];
  dst_ptr[253] = rle_values[rle_idxs[253]];
  dst_ptr[254] = rle_values[rle_idxs[254]];
  dst_ptr[255] = rle_values[rle_idxs[255]];
  dst_ptr[256] = rle_values[rle_idxs[256]];
  dst_ptr[257] = rle_values[rle_idxs[257]];
  dst_ptr[258] = rle_values[rle_idxs[258]];
  dst_ptr[259] = rle_values[rle_idxs[259]];
  dst_ptr[260] = rle_values[rle_idxs[260]];
  dst_ptr[261] = rle_values[rle_idxs[261]];
  dst_ptr[262] = rle_values[rle_idxs[262]];
  dst_ptr[263] = rle_values[rle_idxs[263]];
  dst_ptr[264] = rle_values[rle_idxs[264]];
  dst_ptr[265] = rle_values[rle_idxs[265]];
  dst_ptr[266] = rle_values[rle_idxs[266]];
  dst_ptr[267] = rle_values[rle_idxs[267]];
  dst_ptr[268] = rle_values[rle_idxs[268]];
  dst_ptr[269] = rle_values[rle_idxs[269]];
  dst_ptr[270] = rle_values[rle_idxs[270]];
  dst_ptr[271] = rle_values[rle_idxs[271]];
  dst_ptr[272] = rle_values[rle_idxs[272]];
  dst_ptr[273] = rle_values[rle_idxs[273]];
  dst_ptr[274] = rle_values[rle_idxs[274]];
  dst_ptr[275] = rle_values[rle_idxs[275]];
  dst_ptr[276] = rle_values[rle_idxs[276]];
  dst_ptr[277] = rle_values[rle_idxs[277]];
  dst_ptr[278] = rle_values[rle_idxs[278]];
  dst_ptr[279] = rle_values[rle_idxs[279]];
  dst_ptr[280] = rle_values[rle_idxs[280]];
  dst_ptr[281] = rle_values[rle_idxs[281]];
  dst_ptr[282] = rle_values[rle_idxs[282]];
  dst_ptr[283] = rle_values[rle_idxs[283]];
  dst_ptr[284] = rle_values[rle_idxs[284]];
  dst_ptr[285] = rle_values[rle_idxs[285]];
  dst_ptr[286] = rle_values[rle_idxs[286]];
  dst_ptr[287] = rle_values[rle_idxs[287]];
  dst_ptr[288] = rle_values[rle_idxs[288]];
  dst_ptr[289] = rle_values[rle_idxs[289]];
  dst_ptr[290] = rle_values[rle_idxs[290]];
  dst_ptr[291] = rle_values[rle_idxs[291]];
  dst_ptr[292] = rle_values[rle_idxs[292]];
  dst_ptr[293] = rle_values[rle_idxs[293]];
  dst_ptr[294] = rle_values[rle_idxs[294]];
  dst_ptr[295] = rle_values[rle_idxs[295]];
  dst_ptr[296] = rle_values[rle_idxs[296]];
  dst_ptr[297] = rle_values[rle_idxs[297]];
  dst_ptr[298] = rle_values[rle_idxs[298]];
  dst_ptr[299] = rle_values[rle_idxs[299]];
  dst_ptr[300] = rle_values[rle_idxs[300]];
  dst_ptr[301] = rle_values[rle_idxs[301]];
  dst_ptr[302] = rle_values[rle_idxs[302]];
  dst_ptr[303] = rle_values[rle_idxs[303]];
  dst_ptr[304] = rle_values[rle_idxs[304]];
  dst_ptr[305] = rle_values[rle_idxs[305]];
  dst_ptr[306] = rle_values[rle_idxs[306]];
  dst_ptr[307] = rle_values[rle_idxs[307]];
  dst_ptr[308] = rle_values[rle_idxs[308]];
  dst_ptr[309] = rle_values[rle_idxs[309]];
  dst_ptr[310] = rle_values[rle_idxs[310]];
  dst_ptr[311] = rle_values[rle_idxs[311]];
  dst_ptr[312] = rle_values[rle_idxs[312]];
  dst_ptr[313] = rle_values[rle_idxs[313]];
  dst_ptr[314] = rle_values[rle_idxs[314]];
  dst_ptr[315] = rle_values[rle_idxs[315]];
  dst_ptr[316] = rle_values[rle_idxs[316]];
  dst_ptr[317] = rle_values[rle_idxs[317]];
  dst_ptr[318] = rle_values[rle_idxs[318]];
  dst_ptr[319] = rle_values[rle_idxs[319]];
  dst_ptr[320] = rle_values[rle_idxs[320]];
  dst_ptr[321] = rle_values[rle_idxs[321]];
  dst_ptr[322] = rle_values[rle_idxs[322]];
  dst_ptr[323] = rle_values[rle_idxs[323]];
  dst_ptr[324] = rle_values[rle_idxs[324]];
  dst_ptr[325] = rle_values[rle_idxs[325]];
  dst_ptr[326] = rle_values[rle_idxs[326]];
  dst_ptr[327] = rle_values[rle_idxs[327]];
  dst_ptr[328] = rle_values[rle_idxs[328]];
  dst_ptr[329] = rle_values[rle_idxs[329]];
  dst_ptr[330] = rle_values[rle_idxs[330]];
  dst_ptr[331] = rle_values[rle_idxs[331]];
  dst_ptr[332] = rle_values[rle_idxs[332]];
  dst_ptr[333] = rle_values[rle_idxs[333]];
  dst_ptr[334] = rle_values[rle_idxs[334]];
  dst_ptr[335] = rle_values[rle_idxs[335]];
  dst_ptr[336] = rle_values[rle_idxs[336]];
  dst_ptr[337] = rle_values[rle_idxs[337]];
  dst_ptr[338] = rle_values[rle_idxs[338]];
  dst_ptr[339] = rle_values[rle_idxs[339]];
  dst_ptr[340] = rle_values[rle_idxs[340]];
  dst_ptr[341] = rle_values[rle_idxs[341]];
  dst_ptr[342] = rle_values[rle_idxs[342]];
  dst_ptr[343] = rle_values[rle_idxs[343]];
  dst_ptr[344] = rle_values[rle_idxs[344]];
  dst_ptr[345] = rle_values[rle_idxs[345]];
  dst_ptr[346] = rle_values[rle_idxs[346]];
  dst_ptr[347] = rle_values[rle_idxs[347]];
  dst_ptr[348] = rle_values[rle_idxs[348]];
  dst_ptr[349] = rle_values[rle_idxs[349]];
  dst_ptr[350] = rle_values[rle_idxs[350]];
  dst_ptr[351] = rle_values[rle_idxs[351]];
  dst_ptr[352] = rle_values[rle_idxs[352]];
  dst_ptr[353] = rle_values[rle_idxs[353]];
  dst_ptr[354] = rle_values[rle_idxs[354]];
  dst_ptr[355] = rle_values[rle_idxs[355]];
  dst_ptr[356] = rle_values[rle_idxs[356]];
  dst_ptr[357] = rle_values[rle_idxs[357]];
  dst_ptr[358] = rle_values[rle_idxs[358]];
  dst_ptr[359] = rle_values[rle_idxs[359]];
  dst_ptr[360] = rle_values[rle_idxs[360]];
  dst_ptr[361] = rle_values[rle_idxs[361]];
  dst_ptr[362] = rle_values[rle_idxs[362]];
  dst_ptr[363] = rle_values[rle_idxs[363]];
  dst_ptr[364] = rle_values[rle_idxs[364]];
  dst_ptr[365] = rle_values[rle_idxs[365]];
  dst_ptr[366] = rle_values[rle_idxs[366]];
  dst_ptr[367] = rle_values[rle_idxs[367]];
  dst_ptr[368] = rle_values[rle_idxs[368]];
  dst_ptr[369] = rle_values[rle_idxs[369]];
  dst_ptr[370] = rle_values[rle_idxs[370]];
  dst_ptr[371] = rle_values[rle_idxs[371]];
  dst_ptr[372] = rle_values[rle_idxs[372]];
  dst_ptr[373] = rle_values[rle_idxs[373]];
  dst_ptr[374] = rle_values[rle_idxs[374]];
  dst_ptr[375] = rle_values[rle_idxs[375]];
  dst_ptr[376] = rle_values[rle_idxs[376]];
  dst_ptr[377] = rle_values[rle_idxs[377]];
  dst_ptr[378] = rle_values[rle_idxs[378]];
  dst_ptr[379] = rle_values[rle_idxs[379]];
  dst_ptr[380] = rle_values[rle_idxs[380]];
  dst_ptr[381] = rle_values[rle_idxs[381]];
  dst_ptr[382] = rle_values[rle_idxs[382]];
  dst_ptr[383] = rle_values[rle_idxs[383]];
  dst_ptr[384] = rle_values[rle_idxs[384]];
  dst_ptr[385] = rle_values[rle_idxs[385]];
  dst_ptr[386] = rle_values[rle_idxs[386]];
  dst_ptr[387] = rle_values[rle_idxs[387]];
  dst_ptr[388] = rle_values[rle_idxs[388]];
  dst_ptr[389] = rle_values[rle_idxs[389]];
  dst_ptr[390] = rle_values[rle_idxs[390]];
  dst_ptr[391] = rle_values[rle_idxs[391]];
  dst_ptr[392] = rle_values[rle_idxs[392]];
  dst_ptr[393] = rle_values[rle_idxs[393]];
  dst_ptr[394] = rle_values[rle_idxs[394]];
  dst_ptr[395] = rle_values[rle_idxs[395]];
  dst_ptr[396] = rle_values[rle_idxs[396]];
  dst_ptr[397] = rle_values[rle_idxs[397]];
  dst_ptr[398] = rle_values[rle_idxs[398]];
  dst_ptr[399] = rle_values[rle_idxs[399]];
  dst_ptr[400] = rle_values[rle_idxs[400]];
  dst_ptr[401] = rle_values[rle_idxs[401]];
  dst_ptr[402] = rle_values[rle_idxs[402]];
  dst_ptr[403] = rle_values[rle_idxs[403]];
  dst_ptr[404] = rle_values[rle_idxs[404]];
  dst_ptr[405] = rle_values[rle_idxs[405]];
  dst_ptr[406] = rle_values[rle_idxs[406]];
  dst_ptr[407] = rle_values[rle_idxs[407]];
  dst_ptr[408] = rle_values[rle_idxs[408]];
  dst_ptr[409] = rle_values[rle_idxs[409]];
  dst_ptr[410] = rle_values[rle_idxs[410]];
  dst_ptr[411] = rle_values[rle_idxs[411]];
  dst_ptr[412] = rle_values[rle_idxs[412]];
  dst_ptr[413] = rle_values[rle_idxs[413]];
  dst_ptr[414] = rle_values[rle_idxs[414]];
  dst_ptr[415] = rle_values[rle_idxs[415]];
  dst_ptr[416] = rle_values[rle_idxs[416]];
  dst_ptr[417] = rle_values[rle_idxs[417]];
  dst_ptr[418] = rle_values[rle_idxs[418]];
  dst_ptr[419] = rle_values[rle_idxs[419]];
  dst_ptr[420] = rle_values[rle_idxs[420]];
  dst_ptr[421] = rle_values[rle_idxs[421]];
  dst_ptr[422] = rle_values[rle_idxs[422]];
  dst_ptr[423] = rle_values[rle_idxs[423]];
  dst_ptr[424] = rle_values[rle_idxs[424]];
  dst_ptr[425] = rle_values[rle_idxs[425]];
  dst_ptr[426] = rle_values[rle_idxs[426]];
  dst_ptr[427] = rle_values[rle_idxs[427]];
  dst_ptr[428] = rle_values[rle_idxs[428]];
  dst_ptr[429] = rle_values[rle_idxs[429]];
  dst_ptr[430] = rle_values[rle_idxs[430]];
  dst_ptr[431] = rle_values[rle_idxs[431]];
  dst_ptr[432] = rle_values[rle_idxs[432]];
  dst_ptr[433] = rle_values[rle_idxs[433]];
  dst_ptr[434] = rle_values[rle_idxs[434]];
  dst_ptr[435] = rle_values[rle_idxs[435]];
  dst_ptr[436] = rle_values[rle_idxs[436]];
  dst_ptr[437] = rle_values[rle_idxs[437]];
  dst_ptr[438] = rle_values[rle_idxs[438]];
  dst_ptr[439] = rle_values[rle_idxs[439]];
  dst_ptr[440] = rle_values[rle_idxs[440]];
  dst_ptr[441] = rle_values[rle_idxs[441]];
  dst_ptr[442] = rle_values[rle_idxs[442]];
  dst_ptr[443] = rle_values[rle_idxs[443]];
  dst_ptr[444] = rle_values[rle_idxs[444]];
  dst_ptr[445] = rle_values[rle_idxs[445]];
  dst_ptr[446] = rle_values[rle_idxs[446]];
  dst_ptr[447] = rle_values[rle_idxs[447]];
  dst_ptr[448] = rle_values[rle_idxs[448]];
  dst_ptr[449] = rle_values[rle_idxs[449]];
  dst_ptr[450] = rle_values[rle_idxs[450]];
  dst_ptr[451] = rle_values[rle_idxs[451]];
  dst_ptr[452] = rle_values[rle_idxs[452]];
  dst_ptr[453] = rle_values[rle_idxs[453]];
  dst_ptr[454] = rle_values[rle_idxs[454]];
  dst_ptr[455] = rle_values[rle_idxs[455]];
  dst_ptr[456] = rle_values[rle_idxs[456]];
  dst_ptr[457] = rle_values[rle_idxs[457]];
  dst_ptr[458] = rle_values[rle_idxs[458]];
  dst_ptr[459] = rle_values[rle_idxs[459]];
  dst_ptr[460] = rle_values[rle_idxs[460]];
  dst_ptr[461] = rle_values[rle_idxs[461]];
  dst_ptr[462] = rle_values[rle_idxs[462]];
  dst_ptr[463] = rle_values[rle_idxs[463]];
  dst_ptr[464] = rle_values[rle_idxs[464]];
  dst_ptr[465] = rle_values[rle_idxs[465]];
  dst_ptr[466] = rle_values[rle_idxs[466]];
  dst_ptr[467] = rle_values[rle_idxs[467]];
  dst_ptr[468] = rle_values[rle_idxs[468]];
  dst_ptr[469] = rle_values[rle_idxs[469]];
  dst_ptr[470] = rle_values[rle_idxs[470]];
  dst_ptr[471] = rle_values[rle_idxs[471]];
  dst_ptr[472] = rle_values[rle_idxs[472]];
  dst_ptr[473] = rle_values[rle_idxs[473]];
  dst_ptr[474] = rle_values[rle_idxs[474]];
  dst_ptr[475] = rle_values[rle_idxs[475]];
  dst_ptr[476] = rle_values[rle_idxs[476]];
  dst_ptr[477] = rle_values[rle_idxs[477]];
  dst_ptr[478] = rle_values[rle_idxs[478]];
  dst_ptr[479] = rle_values[rle_idxs[479]];
  dst_ptr[480] = rle_values[rle_idxs[480]];
  dst_ptr[481] = rle_values[rle_idxs[481]];
  dst_ptr[482] = rle_values[rle_idxs[482]];
  dst_ptr[483] = rle_values[rle_idxs[483]];
  dst_ptr[484] = rle_values[rle_idxs[484]];
  dst_ptr[485] = rle_values[rle_idxs[485]];
  dst_ptr[486] = rle_values[rle_idxs[486]];
  dst_ptr[487] = rle_values[rle_idxs[487]];
  dst_ptr[488] = rle_values[rle_idxs[488]];
  dst_ptr[489] = rle_values[rle_idxs[489]];
  dst_ptr[490] = rle_values[rle_idxs[490]];
  dst_ptr[491] = rle_values[rle_idxs[491]];
  dst_ptr[492] = rle_values[rle_idxs[492]];
  dst_ptr[493] = rle_values[rle_idxs[493]];
  dst_ptr[494] = rle_values[rle_idxs[494]];
  dst_ptr[495] = rle_values[rle_idxs[495]];
  dst_ptr[496] = rle_values[rle_idxs[496]];
  dst_ptr[497] = rle_values[rle_idxs[497]];
  dst_ptr[498] = rle_values[rle_idxs[498]];
  dst_ptr[499] = rle_values[rle_idxs[499]];
  dst_ptr[500] = rle_values[rle_idxs[500]];
  dst_ptr[501] = rle_values[rle_idxs[501]];
  dst_ptr[502] = rle_values[rle_idxs[502]];
  dst_ptr[503] = rle_values[rle_idxs[503]];
  dst_ptr[504] = rle_values[rle_idxs[504]];
  dst_ptr[505] = rle_values[rle_idxs[505]];
  dst_ptr[506] = rle_values[rle_idxs[506]];
  dst_ptr[507] = rle_values[rle_idxs[507]];
  dst_ptr[508] = rle_values[rle_idxs[508]];
  dst_ptr[509] = rle_values[rle_idxs[509]];
  dst_ptr[510] = rle_values[rle_idxs[510]];
  dst_ptr[511] = rle_values[rle_idxs[511]];
}

static void BM_VecLoadUnroll(benchmark::State& state) {
  uint32_t* __restrict rle_values = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_values[i] = i;
  }
  uint32_t* __restrict rle_idxs = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_idxs[i] = i / 4;
  }
  uint32_t* __restrict output = new (std::align_val_t{64}) uint32_t[VEC_SIZE];

  for (auto _ : state) {
    for (int i = 0; i < VEC_SIZE; i += 512) {
      UnrolledRLEDecoding512Values(output + i, rle_values + i, rle_idxs + i);
    }
    benchmark::DoNotOptimize(output);
    benchmark::ClobberMemory();
  }
  ::operator delete[](rle_values, std::align_val_t(64));
  ::operator delete[](rle_idxs, std::align_val_t(64));
  ::operator delete[](output, std::align_val_t(64));
}
BENCHMARK(BM_VecLoadUnroll);

// static void BM_VecLoadGatherAVX2(benchmark::State& state) {
//   uint32_t* __restrict rle_values = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
//   for (int i = 0; i < VEC_SIZE; ++i) {
//     rle_values[i] = i;
//   }
//   uint32_t* __restrict rle_idxs = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
//   for (int i = 0; i < VEC_SIZE; ++i) {
//     rle_idxs[i] = i / 4;
//   }
//   uint32_t* __restrict output = new (std::align_val_t{64}) uint32_t[VEC_SIZE];

//   auto constexpr NUM_LANES = 256 / 32;
//   for (auto _ : state) {
//     for (int i = 0; i < VEC_SIZE / NUM_LANES; ++i) {
//       _mm256_store_epi32(output + i * NUM_LANES,
//                          _mm256_i32gather_epi32(rle_values, _mm256_load_epi32(rle_idxs + i * NUM_LANES), 4));
//     }
//     benchmark::DoNotOptimize(output);
//     benchmark::ClobberMemory();
//   }
//   ::operator delete[](rle_values, std::align_val_t(64));
//   ::operator delete[](rle_idxs, std::align_val_t(64));
//   ::operator delete[](output, std::align_val_t(64));
// }
// BENCHMARK(BM_VecLoadGatherAVX2);

static void BM_VecLoadGatherAVX512(benchmark::State& state) {
  uint32_t* __restrict rle_values = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_values[i] = i;
  }
  uint32_t* __restrict rle_idxs = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_idxs[i] = i / 4;
  }
  uint32_t* __restrict output = new (std::align_val_t{64}) uint32_t[VEC_SIZE];

  for (auto _ : state) {
    for (int i = 0; i < VEC_SIZE / 16; ++i) {
      _mm512_store_epi32(output + i * 16, _mm512_i32gather_epi32(_mm512_load_epi32(rle_idxs + i * 16), rle_values, 4));
    }
    benchmark::DoNotOptimize(output);
    benchmark::ClobberMemory();
  }
  ::operator delete[](rle_values, std::align_val_t(64));
  ::operator delete[](rle_idxs, std::align_val_t(64));
  ::operator delete[](output, std::align_val_t(64));
}
BENCHMARK(BM_VecLoadGatherAVX512);

static void BM_UntransUnroll(benchmark::State& state) {
  uint32_t* __restrict rle_values = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_values[i] = i;
  }
  uint32_t* __restrict output = new (std::align_val_t{64}) uint32_t[VEC_SIZE];

  for (auto _ : state) {
    untranspose_i(rle_values, output);
    benchmark::DoNotOptimize(output);
    benchmark::ClobberMemory();
  }
  ::operator delete[](rle_values, std::align_val_t(64));
  ::operator delete[](output, std::align_val_t(64));
}

BENCHMARK(BM_UntransUnroll);

static void BM_Untrans(benchmark::State& state) {
  uint32_t* __restrict rle_values = new (std::align_val_t{64}) uint32_t[VEC_SIZE];
  for (int i = 0; i < VEC_SIZE; ++i) {
    rle_values[i] = i;
  }
  uint32_t* __restrict output = new (std::align_val_t{64}) uint32_t[VEC_SIZE];

  for (auto _ : state) {
    fls_transpose(rle_values, output);
    benchmark::DoNotOptimize(output);
    benchmark::ClobberMemory();
  }
  ::operator delete[](rle_values, std::align_val_t(64));
  ::operator delete[](output, std::align_val_t(64));
}

BENCHMARK(BM_Untrans);

BENCHMARK_MAIN();
